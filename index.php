<?php
mb_internal_encoding('UTF-8');
//1. С помощью цикла while вывести все числа в промежутке от 0 до 100, которые делятся на 3 без остатка.
echo "Задание 1. <br>";
$a = 0;
while ($a <= 100){
    if ($a % 3 != 0){
        $a++;
        continue;
    }
    else {
        echo $a.' ';
        $a++;
    }
};

echo "<br><br> Задание 2. <br>";
//2. С помощью цикла do…while написать функцию для вывода чисел от 0 до 10, чтобы результат выглядел так:
//
//0 – ноль.
//1 – нечетное число.
//2 – четное число.
//3 – нечетное число.
//…
//10 – четное число.

$a = 0;
$b = 10;
do {
    if ($a == 0){
        echo $a.' - ноль.<br>';
    }
    elseif ($a % 2 == 0){
        echo $a.' - четное число.<br>';
    }
    else {
        echo $a.' - нечетное число.<br>';
    }
    $a++;
}
while ($a <= $b);


echo "<br> Задание 3. <br>";
//3. Объявить массив, в котором в качестве ключей будут использоваться названия областей, а в качестве значений – массивы с названиями городов из соответствующей области. Вывести в цикле значения массива, чтобы результат был таким:
//
//Московская область:
//Москва, Зеленоград, Клин
//Ленинградская область:
//Санкт-Петербург, Всеволожск, Павловск, Кронштадт
//Рязанская область … (названия городов можно найти на maps.yandex.ru)

$states = [
    "Московская область" => [
        "Апрелевка",
        "Балашиха",
        "Бронницы",
        "Верея",
        "Видное",
        "Волоколамск",
        "Воскресенск",
        "Высоковск", 
        "Голицыно",
        "Дедовск",
        "Дзержинский",
        "Дмитров",
        "Долгопрудный",
        "Домодедово",
        "Дрезна",
        "Дубна",
        "Егорьевск",
        "Жуковский",
        "Зарайск",
        "Звенигород",
        "Ивантеевка",
        "Истра",
        "Кашира",
        "Клин",
        "Коломна",
        "Королёв",
        "Котельники",
        "Красноармейск",
        "Красногорск",
        "Краснозаводск",
        "Краснознаменск",
        "Кубинка",
        "Куровское",
        "Лукино-Дулёво",
        "Лобня",
        "Лосино-Петровский",
        "Луховицы",
        "Лыткарино",
        "Люберцы",
        "Можайск",
        "Мытищи",
        "Наро-Фоминск",
        "Ногинск",
        "Одинцово",
        "Озёры",
        "Орехово-Зуево",
        "Павловский Посад",
        "Пересвет",
        "Подольск",
        "Протвино",
        "Пушкино",
        "Пущино",
        "Раменское",
        "Реутов",
        "Рошаль",
        "Руза",
        "Сергиев Посад",
        "Серпухов",
        "Солнечногорск",
        "Старая Купавна",
        "Ступино",
        "Талдом",
        "Фрязино",
        "Химки",
        "Хотьково",
        "Черноголовка",
        "Чехов",
        "Шатура",
        "Щёлково",
        "Электрогорск",
        "Электросталь",
        "Электроугли",
        "Яхрома",
    ],
    "Ленинградская область" => [
        "Бокситогорск",
        "Волосово",
        "Волхов",
        "Всеволожск",
        "Выборг",
        "Высоцк",
        "Гатчина",
        "Ивангород",
        "Каменногорск",
        "Кингисепп",
        "Кириши",
        "Кировск",
        "Коммунар",
        "Кудрово",
        "Лодейное Поле",
        "Луга",
        "Любань",
        "Мурино",
        "Никольское",
        "Новая Ладога",
        "Отрадное",
        "Пикалёво",
        "Подпорожье",
        "Приморск",
        "Приозерск",
        "Светогорск",
        "Сертолово",
        "Сланцы",
        "Сосновый Бор",
        "Сясьстрой",
        "Тихвин",
        "Тосно",
        "Шлиссельбург",
    ],
    "Рязанская область" => [
        "Касимов",
        "Кораблино",
        "Михайлов",
        "Новомичуринск",
        "Рыбное",
        "Ряжск",
        "Рязань",
        "Сасово",
        "Скопин",
        "Спас-Клепики",
        "Спасск-Рязанский",
        "Шацк",
    ],
]; 

foreach ($states as $state => $towns){
    echo $state.": <br>".implode(", ", $towns).".<br><br>";
};


echo "Задание 4. <br>";
//4. Объявить массив, индексами которого являются буквы русского языка, а значениями – соответствующие латинские буквосочетания (‘а’=> ’a’, ‘б’ => ‘b’, ‘в’ => ‘v’, ‘г’ => ‘g’, …, ‘э’ => ‘e’, ‘ю’ => ‘yu’, ‘я’ => ‘ya’).
//
//Написать функцию транслитерации строк.

$transliteDict = [
    "а" => "a",
    "б" => "b",
    "в" => "v",
    "г" => "g",
    "д" => "d",
    "е" => "e",
    "ё" => "yo",
    "ж" => "zh",
    "з" => "z",
    "и" => "i",
    "й" => "j",
    "к" => "k",
    "л" => "l",
    "м" => "m",
    "н" => "n",
    "о" => "o",
    "п" => "p",
    "р" => "r",
    "с" => "s",
    "т" => "t",
    "у" => "u",
    "ф" => "f",
    "х" => "h",
    "ц" => "c",
    "ч" => "ch",
    "ш" => "sh",
    "щ" => "w",
    "ь" => "q",
    "ы" => "yh",
    "ъ" => "qh",
    "э" => "eh",
    "ю" => "yu",
    "я" => "ya",
    "А" => "A",
    "Б" => "B",
    "В" => "V",
    "Г" => "G",
    "Д" => "D",
    "Е" => "E",
    "Ё" => "Yo",
    "Ж" => "Zh",
    "З" => "Z",
    "И" => "I",
    "Й" => "J",
    "К" => "K",
    "Л" => "L",
    "М" => "M",
    "Н" => "N",
    "О" => "O",
    "П" => "P",
    "Р" => "R",
    "С" => "S",
    "Т" => "T",
    "У" => "U",
    "Ф" => "F",
    "Х" => "H",
    "Ц" => "C",
    "Ч" => "Ch",
    "Ш" => "Sh",
    "Щ" => "W",
    "Ь" => "Q",
    "Ы" => "Yh",
    "Ъ" => "Qh",
    "Э" => "Eh",
    "Ю" => "Yu",
    "Я" => "Ya",
//    " " => "_",
];

function getTrans ($strOrig, $transliteDict){
    return strtr($strOrig, $transliteDict);
}
echo getTrans('Привет, меня зовут ПХП!', $transliteDict);
    
echo "<br><br> Задание 5. <br>";
//5. Написать функцию, которая заменяет в строке пробелы на подчеркивания и возвращает видоизмененную строчку.

//Можно добавить пару ключ-значение в массив заданием выше. Также, можно решить задачу следующим способом.

function strDelSpace($strOrig){
    return str_replace(" ", "_", $strOrig);
}

echo strDelSpace('Привет, меня зовут ПХП!');


echo "<br><br> Задание 6. <br>";    
//6. В имеющемся шаблоне сайта заменить статичное меню (ul - li) на генерируемое через PHP. Необходимо представить пункты меню как элементы массива и вывести их циклом. Подумать, как можно реализовать меню с вложенными подменю? Попробовать его реализовать.
$menu = [
    "Home" => ["Home"],
    "About Us" => [
        "Our team", "Our office", "Our works",
    ],
    "Our partners" => [
        "Parner1", "Partner2","Parner11", "Partner22","Parner111", "Partner222",
    ],
    "Contacts" => [
        "Adress", "Tel", "Email", "Map",
    ],
];

function getMenu ($menu){
    $result = "";
    foreach ($menu as $keys => $item){
        if (is_array($item)){
            $result .= "</ul><ul> $keys ";
            $result .= getMenu($item);
        }
        else {
            $result .= "<li>$item</li>"; 
        }
    };
    return $result.="</ul>";
};   

echo getMenu($menu);

echo "<br><br> Задание 7. <br>";
//7. *Вывести с помощью цикла for числа от 0 до 9, НЕ используя тело цикла.
    
for ($i = 0; $i < 10; print $i++." "){
    //PS: print возвращает 1, echo возвращает void.
};


echo "<br><br> Задание 8. <br>";
//8. *Повторить третье задание, но вывести на экран только города, начинающиеся с буквы «К».
//

function townsOfK($towns){
        $townK =[];
        foreach ($towns as $keys => $town){
            if (mb_substr($town, 0, 1) === "К"){
                $townK[] = $town;
            }
        };
        return $townK;
    };

foreach ($states as $state => $towns){
    echo $state.": <br>".implode(", ", townsOfK($towns)).".<br><br>";
};

echo "<br><br> Задание 9. <br>";
//9. *Объединить две ранее написанные функции в одну, которая получает строку на русском языке, производит транслитерацию и замену пробелов на подчеркивания (аналогичная задача решается при конструировании url-адресов на основе названия статьи в блогах).

//Не обязательно объединять функции, можно добавить дополнительный элемент в массив. Если же задача стоит в том, чтобы из заголовка поста делать url, то функция должна иметь примерно следующий вид.

function getURLTranslit($strOrig, $transliteDict){
    $strOrig = trim($strOrig); //убрать пробелы в начале и конце
    $strOrig = str_replace(array("\n", "\r"), " ", $strOrig); //убрать перевод строки
    $strOrig = strip_tags($strOrig); //убрать html-теги
    $strOrig = function_exists('mb_strtolower') ? mb_strtolower($strOrig) : strtolower($strOrig); // перевести буквы в нижний регистр
    $strOrig = strtr($strOrig, $transliteDict); // произвести транслит по словарю
    $strOrig = preg_replace("/[^0-9a-z-_ ]/i", "", $strOrig); // убрать недопустимые в url знаки
    $strOrig = preg_replace("/\s+/", ' ', $strOrig); //убрать двойные, тройные и т.д. пробелы
    $strOrig = str_replace(" ", "_", $strOrig); //заменить пробелы на нижнее подчеркивание
    return $strOrig; // вернуть строку
}

echo getURLTranslit('Привет! :) <script></script> Эта строка    может быть преобразована в url-заголовок!', $transliteDict);

?>